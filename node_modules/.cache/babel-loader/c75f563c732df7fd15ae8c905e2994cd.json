{"ast":null,"code":"var _jsxFileName = \"/home/bocz/Codecool/Advanced - Java Enterprise/React - SI/react_to_do_list/src/App.js\";\nimport React, { useEffect, useState } from \"react\";\nimport { BrowserRouter as Router, Route } from \"react-router-dom\";\nimport \"./App.css\";\nimport Todos from \"./components/Todos\";\nimport Header from \"./layout/Header\";\nimport AddTodo from \"./components/AddTodo\";\nimport About from \"./pages/About\";\nimport Axios from \"axios\";\n\nconst App = () => {\n  const [todos, setTodos] = useState([]);\n  useEffect(() => {\n    Axios.get(\"https://jsonplaceholder.typicode.com/todos?_limit=20\").then(res => setTodos(res.data));\n  }, []); // Toggle complete\n\n  const markComplete = id => {\n    setTodos(todos.map(todo => {\n      if (todo.id === id) {\n        console.log(todo.completed);\n        todo.completed = !todo.completed;\n      }\n\n      return todo;\n    }));\n  };\n\n  const delTodo = id => {\n    Axios.delete(`https://jsonplaceholder.typicode.com/todos/${id}`).then(res => setTodos([...todos.filter(todo => todo.id !== id)]));\n  };\n\n  const addToDo = title => {\n    Axios.post(\"https://jsonplaceholder.typicode.com/todos\", {\n      title,\n      completed: false\n    }).then(res => setTodos([...todos, res.data]));\n  };\n\n  return /*#__PURE__*/React.createElement(Router, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"App\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Header, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(Route, {\n    exact: true,\n    path: \"/\",\n    render: props => /*#__PURE__*/React.createElement(React.Fragment, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(AddTodo, {\n      addToDo: addToDo,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(Todos, {\n      todos: todos,\n      markComplete: markComplete,\n      delTodo: delTodo,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 17\n      }\n    })),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(Route, {\n    path: \"/about\",\n    component: About,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 11\n    }\n  }))));\n};\n\nexport default App;","map":{"version":3,"sources":["/home/bocz/Codecool/Advanced - Java Enterprise/React - SI/react_to_do_list/src/App.js"],"names":["React","useEffect","useState","BrowserRouter","Router","Route","Todos","Header","AddTodo","About","Axios","App","todos","setTodos","get","then","res","data","markComplete","id","map","todo","console","log","completed","delTodo","delete","filter","addToDo","title","post","props"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport { BrowserRouter as Router, Route } from \"react-router-dom\";\nimport \"./App.css\";\nimport Todos from \"./components/Todos\";\nimport Header from \"./layout/Header\";\nimport AddTodo from \"./components/AddTodo\";\nimport About from \"./pages/About\";\nimport Axios from \"axios\";\n\nconst App = () => {\n  const [todos, setTodos] = useState([]);\n\n  useEffect(() => {\n    Axios.get(\n      \"https://jsonplaceholder.typicode.com/todos?_limit=20\"\n    ).then((res) => setTodos(res.data));\n  }, []);\n\n  // Toggle complete\n  const markComplete = (id) => {\n    setTodos(\n      todos.map((todo) => {\n        if (todo.id === id) {\n          console.log(todo.completed);\n          todo.completed = !todo.completed;\n        }\n        return todo;\n      })\n    );\n  };\n\n  const delTodo = (id) => {\n    Axios.delete(\n      `https://jsonplaceholder.typicode.com/todos/${id}`\n    ).then((res) => setTodos([...todos.filter((todo) => todo.id !== id)]));\n  };\n\n  const addToDo = (title) => {\n    Axios.post(\"https://jsonplaceholder.typicode.com/todos\", {\n      title,\n      completed: false,\n    }).then((res) => setTodos([...todos, res.data]));\n  };\n\n  return (\n    <Router>\n      <div className=\"App\">\n        <div className=\"container\">\n          <Header />\n          <Route\n            exact\n            path=\"/\"\n            render={(props) => (\n              <React.Fragment>\n                <AddTodo addToDo={addToDo} />\n                <Todos\n                  todos={todos}\n                  markComplete={markComplete}\n                  delTodo={delTodo}\n                />\n              </React.Fragment>\n            )}\n          />\n\n          <Route path=\"/about\" component={About} />\n        </div>\n      </div>\n    </Router>\n  );\n};\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}